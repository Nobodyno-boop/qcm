{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to QCM Project \u00b6","title":"Welcome to QCM Project"},{"location":"index.html#welcome-to-qcm-project","text":"","title":"Welcome to QCM Project"},{"location":"api/index.html","text":"Overview \u00b6 Classes \u00b6 \\Vroom\\App\\AbstractApp \ud83e\udd0d \\Vroom\\Config\\Config \ud83e\udd0d \\Vroom\\Controller\\AbstractController \ud83e\udd0d \\Vroom\\Controller\\Controllers \ud83e\udd0d \\Vroom\\Framework \ud83e\udd0d \\Vroom\\Orm\\Decorator\\Column \ud83e\udd0d \\Vroom\\Orm\\Decorator\\Entity \ud83e\udd0d \\Vroom\\Orm\\Model\\Model \ud83e\udd0d \\Vroom\\Orm\\Model\\Models \ud83e\udd0d \\Vroom\\Orm\\Model\\Types \ud83e\udd0d \\Vroom\\Orm\\Orm \ud83e\udd0d \\Vroom\\Orm\\Repository \ud83e\udd0d \\Vroom\\Orm\\Sql\\QueryBuilder \ud83e\udd0d \\Vroom\\Orm\\Sql\\Sql \ud83e\udd0d \\Vroom\\Router\\Decorator\\Route \ud83e\udd0d \\Vroom\\Router\\Request \ud83e\udd0d \\Vroom\\Router\\Response \ud83e\udd0d \\Vroom\\Router\\Route \ud83e\udd0d \\Vroom\\Router\\Router \ud83e\udd0d \\Vroom\\Security\\Token \ud83e\udd0d \\Vroom\\Utils\\ArrayUtils \ud83e\udd0d \\Vroom\\Utils\\Container \ud83e\udd0d \\Vroom\\Utils\\Metrics \ud83e\udd0d \\Vroom\\View\\AppContext \ud83e\udd0d \\Vroom\\View\\View \ud83e\udd0d PHPLOC \u00b6 directories = 2 files = 3 loc = 108 lloc = 9 llocClasses = 9 llocFunctions = 0 llocGlobal = 0 cloc = 12 ccn = 0 ccnMethods = 0 interfaces = 0 traits = 0 classes = 3 abstractClasses = 0 concreteClasses = 3 finalClasses = 0 nonFinalClasses = 3 functions = 0 namedFunctions = 0 anonymousFunctions = 0 methods = 9 publicMethods = 9 nonPublicMethods = 0 protectedMethods = 0 privateMethods = 0 nonStaticMethods = 9 staticMethods = 0 constants = 0 classConstants = 0 publicClassConstants = 0 nonPublicClassConstants = 0 globalConstants = 0 testClasses = 0 testMethods = 0 ccnByLloc = 0 llocByNof = 0 methodCalls = 0 staticMethodCalls = 0 instanceMethodCalls = 0 attributeAccesses = 4 staticAttributeAccesses = 0 instanceAttributeAccesses = 4 globalAccesses = 0 globalVariableAccesses = 0 superGlobalVariableAccesses = 0 globalConstantAccesses = 0 classCcnMin = 1 classCcnAvg = 1 classCcnMax = 1 classLlocMin = 1 classLlocAvg = 3 classLlocMax = 6 methodCcnMin = 1 methodCcnAvg = 1 methodCcnMax = 1 methodLlocMin = 0 methodLlocAvg = 0.77777777777778 methodLlocMax = 1 averageMethodsPerClass = 3 minimumMethodsPerClass = 2 maximumMethodsPerClass = 4 namespaces = 3 ncloc = 96","title":"Overview"},{"location":"api/index.html#overview","text":"","title":"Overview"},{"location":"api/index.html#classes","text":"\\Vroom\\App\\AbstractApp \ud83e\udd0d \\Vroom\\Config\\Config \ud83e\udd0d \\Vroom\\Controller\\AbstractController \ud83e\udd0d \\Vroom\\Controller\\Controllers \ud83e\udd0d \\Vroom\\Framework \ud83e\udd0d \\Vroom\\Orm\\Decorator\\Column \ud83e\udd0d \\Vroom\\Orm\\Decorator\\Entity \ud83e\udd0d \\Vroom\\Orm\\Model\\Model \ud83e\udd0d \\Vroom\\Orm\\Model\\Models \ud83e\udd0d \\Vroom\\Orm\\Model\\Types \ud83e\udd0d \\Vroom\\Orm\\Orm \ud83e\udd0d \\Vroom\\Orm\\Repository \ud83e\udd0d \\Vroom\\Orm\\Sql\\QueryBuilder \ud83e\udd0d \\Vroom\\Orm\\Sql\\Sql \ud83e\udd0d \\Vroom\\Router\\Decorator\\Route \ud83e\udd0d \\Vroom\\Router\\Request \ud83e\udd0d \\Vroom\\Router\\Response \ud83e\udd0d \\Vroom\\Router\\Route \ud83e\udd0d \\Vroom\\Router\\Router \ud83e\udd0d \\Vroom\\Security\\Token \ud83e\udd0d \\Vroom\\Utils\\ArrayUtils \ud83e\udd0d \\Vroom\\Utils\\Container \ud83e\udd0d \\Vroom\\Utils\\Metrics \ud83e\udd0d \\Vroom\\View\\AppContext \ud83e\udd0d \\Vroom\\View\\View \ud83e\udd0d","title":"Classes"},{"location":"api/index.html#phploc","text":"directories = 2 files = 3 loc = 108 lloc = 9 llocClasses = 9 llocFunctions = 0 llocGlobal = 0 cloc = 12 ccn = 0 ccnMethods = 0 interfaces = 0 traits = 0 classes = 3 abstractClasses = 0 concreteClasses = 3 finalClasses = 0 nonFinalClasses = 3 functions = 0 namedFunctions = 0 anonymousFunctions = 0 methods = 9 publicMethods = 9 nonPublicMethods = 0 protectedMethods = 0 privateMethods = 0 nonStaticMethods = 9 staticMethods = 0 constants = 0 classConstants = 0 publicClassConstants = 0 nonPublicClassConstants = 0 globalConstants = 0 testClasses = 0 testMethods = 0 ccnByLloc = 0 llocByNof = 0 methodCalls = 0 staticMethodCalls = 0 instanceMethodCalls = 0 attributeAccesses = 4 staticAttributeAccesses = 0 instanceAttributeAccesses = 4 globalAccesses = 0 globalVariableAccesses = 0 superGlobalVariableAccesses = 0 globalConstantAccesses = 0 classCcnMin = 1 classCcnAvg = 1 classCcnMax = 1 classLlocMin = 1 classLlocAvg = 3 classLlocMax = 6 methodCcnMin = 1 methodCcnAvg = 1 methodCcnMax = 1 methodLlocMin = 0 methodLlocAvg = 0.77777777777778 methodLlocMax = 1 averageMethodsPerClass = 3 minimumMethodsPerClass = 2 maximumMethodsPerClass = 4 namespaces = 3 ncloc = 96","title":"PHPLOC"},{"location":"api/Vroom/Framework.html","text":"Class Framework \u00b6 Class \\Vroom\\Framework Methods \u00b6 __construct() \u00b6 public __construct ( \\Vroom\\Config\\Config $config , \\Vroom\\App\\AbstractApp $app ) : Parameters config \\Vroom\\Config\\Config app \\Vroom\\App\\AbstractApp getConfig() \u00b6 public getConfig ( ) : \\Vroom\\Config\\Config Returns \\Vroom\\Config\\Config getRouter() \u00b6 public static getRouter ( ) : \\Vroom\\Router\\Router Returns \\Vroom\\Router\\Router newInstance() \u00b6 public static newInstance ( string $configPath , \\Vroom\\App\\AbstractApp $app ) : \\Vroom\\Framework Parameters configPath string app \\Vroom\\App\\AbstractApp Returns \\Vroom\\Framework","title":"Framework"},{"location":"api/Vroom/Framework.html#class-framework","text":"Class \\Vroom\\Framework","title":"Class Framework"},{"location":"api/Vroom/Framework.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Framework.html#__construct","text":"public __construct ( \\Vroom\\Config\\Config $config , \\Vroom\\App\\AbstractApp $app ) : Parameters config \\Vroom\\Config\\Config app \\Vroom\\App\\AbstractApp","title":"__construct()"},{"location":"api/Vroom/Framework.html#getconfig","text":"public getConfig ( ) : \\Vroom\\Config\\Config Returns \\Vroom\\Config\\Config","title":"getConfig()"},{"location":"api/Vroom/Framework.html#getrouter","text":"public static getRouter ( ) : \\Vroom\\Router\\Router Returns \\Vroom\\Router\\Router","title":"getRouter()"},{"location":"api/Vroom/Framework.html#newinstance","text":"public static newInstance ( string $configPath , \\Vroom\\App\\AbstractApp $app ) : \\Vroom\\Framework Parameters configPath string app \\Vroom\\App\\AbstractApp Returns \\Vroom\\Framework","title":"newInstance()"},{"location":"api/Vroom/App/AbstractApp.html","text":"Class AbstractApp \u00b6 abstract Class \\Vroom\\App\\AbstractApp Methods \u00b6 controller() \u00b6 public controller ( ) : array Returns array models() \u00b6 public models ( ) : array Returns array","title":"AbstractApp"},{"location":"api/Vroom/App/AbstractApp.html#class-abstractapp","text":"abstract Class \\Vroom\\App\\AbstractApp","title":"Class AbstractApp"},{"location":"api/Vroom/App/AbstractApp.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/App/AbstractApp.html#controller","text":"public controller ( ) : array Returns array","title":"controller()"},{"location":"api/Vroom/App/AbstractApp.html#models","text":"public models ( ) : array Returns array","title":"models()"},{"location":"api/Vroom/Config/Config.html","text":"Class Config \u00b6 Class \\Vroom\\Config\\Config Methods \u00b6 __construct() \u00b6 public __construct ( array $config ) : Parameters config array get() \u00b6 public get ( string $path ) : mixed Use the ArrayUtils class and get Return null is the path ins\u2019t valid. Parameters path string Returns mixed getConfigArray() \u00b6 public getConfigArray ( ) : mixed Return the config as array Returns mixed","title":"Config"},{"location":"api/Vroom/Config/Config.html#class-config","text":"Class \\Vroom\\Config\\Config","title":"Class Config"},{"location":"api/Vroom/Config/Config.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Config/Config.html#__construct","text":"public __construct ( array $config ) : Parameters config array","title":"__construct()"},{"location":"api/Vroom/Config/Config.html#get","text":"public get ( string $path ) : mixed Use the ArrayUtils class and get Return null is the path ins\u2019t valid. Parameters path string Returns mixed","title":"get()"},{"location":"api/Vroom/Config/Config.html#getconfigarray","text":"public getConfigArray ( ) : mixed Return the config as array Returns mixed","title":"getConfigArray()"},{"location":"api/Vroom/Controller/AbstractController.html","text":"Class AbstractController \u00b6 Class \\Vroom\\Controller\\AbstractController Methods \u00b6 __construct() \u00b6 public __construct ( \\Vroom\\Router\\Request $request ) : Parameters request \\Vroom\\Router\\Request getToken() \u00b6 public getToken ( ) : string Make a fresh CRSF Token and return it The token is putting in the session Returns string matchToken() \u00b6 public matchToken ( string $token ) : bool Parameters token string Returns bool renderView() \u00b6 public renderView ( string $view , array $context = [] ) : mixed Parameters view string context array Returns mixed response() \u00b6 public response ( ) : \\Vroom\\Router\\Response Returns \\Vroom\\Router\\Response twig() \u00b6 public twig ( ) : \\Twig\\Environment Returns \\Twig\\Environment url() \u00b6 public url ( ) : string Returns string","title":"AbstractController"},{"location":"api/Vroom/Controller/AbstractController.html#class-abstractcontroller","text":"Class \\Vroom\\Controller\\AbstractController","title":"Class AbstractController"},{"location":"api/Vroom/Controller/AbstractController.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Controller/AbstractController.html#__construct","text":"public __construct ( \\Vroom\\Router\\Request $request ) : Parameters request \\Vroom\\Router\\Request","title":"__construct()"},{"location":"api/Vroom/Controller/AbstractController.html#gettoken","text":"public getToken ( ) : string Make a fresh CRSF Token and return it The token is putting in the session Returns string","title":"getToken()"},{"location":"api/Vroom/Controller/AbstractController.html#matchtoken","text":"public matchToken ( string $token ) : bool Parameters token string Returns bool","title":"matchToken()"},{"location":"api/Vroom/Controller/AbstractController.html#renderview","text":"public renderView ( string $view , array $context = [] ) : mixed Parameters view string context array Returns mixed","title":"renderView()"},{"location":"api/Vroom/Controller/AbstractController.html#response","text":"public response ( ) : \\Vroom\\Router\\Response Returns \\Vroom\\Router\\Response","title":"response()"},{"location":"api/Vroom/Controller/AbstractController.html#twig","text":"public twig ( ) : \\Twig\\Environment Returns \\Twig\\Environment","title":"twig()"},{"location":"api/Vroom/Controller/AbstractController.html#url","text":"public url ( ) : string Returns string","title":"url()"},{"location":"api/Vroom/Controller/Controllers.html","text":"Class Controllers \u00b6 Class \\Vroom\\Controller\\Controllers Constants \u00b6 CONTAINER_NAMESPACE \u00b6 public CONTAINER_NAMESPACE = \"_controllers\" Methods \u00b6 get() \u00b6 public static get ( string $name ) : mixed Parameters name string Returns mixed read() \u00b6 public static read ( string | object $controller ) : mixed Parameters controller string|object Returns mixed","title":"Controllers"},{"location":"api/Vroom/Controller/Controllers.html#class-controllers","text":"Class \\Vroom\\Controller\\Controllers","title":"Class Controllers"},{"location":"api/Vroom/Controller/Controllers.html#constants","text":"","title":"Constants"},{"location":"api/Vroom/Controller/Controllers.html#container_namespace","text":"public CONTAINER_NAMESPACE = \"_controllers\"","title":"CONTAINER_NAMESPACE"},{"location":"api/Vroom/Controller/Controllers.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Controller/Controllers.html#get","text":"public static get ( string $name ) : mixed Parameters name string Returns mixed","title":"get()"},{"location":"api/Vroom/Controller/Controllers.html#read","text":"public static read ( string | object $controller ) : mixed Parameters controller string|object Returns mixed","title":"read()"},{"location":"api/Vroom/Orm/Orm.html","text":"Class Orm \u00b6 Class \\Vroom\\Orm\\Orm","title":"Orm"},{"location":"api/Vroom/Orm/Orm.html#class-orm","text":"Class \\Vroom\\Orm\\Orm","title":"Class Orm"},{"location":"api/Vroom/Orm/Repository.html","text":"Class Repository \u00b6 Class \\Vroom\\Orm\\Repository Methods \u00b6 __construct() \u00b6 public __construct ( string $model ) : Parameters model string findBy() \u00b6 public findBy ( string $key , mixed $value ) : mixed Parameters key string value mixed Returns mixed get() \u00b6 public get ( mixed $value , mixed $key = null ) : mixed Parameters value mixed key mixed Returns mixed getAll() \u00b6 public getAll ( INT $limit = 10 ) : mixed Parameters limit INT Returns mixed toModel() \u00b6 public toModel ( mixed $var ) : ? object Parameters var mixed Returns ?object","title":"Repository"},{"location":"api/Vroom/Orm/Repository.html#class-repository","text":"Class \\Vroom\\Orm\\Repository","title":"Class Repository"},{"location":"api/Vroom/Orm/Repository.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Repository.html#__construct","text":"public __construct ( string $model ) : Parameters model string","title":"__construct()"},{"location":"api/Vroom/Orm/Repository.html#findby","text":"public findBy ( string $key , mixed $value ) : mixed Parameters key string value mixed Returns mixed","title":"findBy()"},{"location":"api/Vroom/Orm/Repository.html#get","text":"public get ( mixed $value , mixed $key = null ) : mixed Parameters value mixed key mixed Returns mixed","title":"get()"},{"location":"api/Vroom/Orm/Repository.html#getall","text":"public getAll ( INT $limit = 10 ) : mixed Parameters limit INT Returns mixed","title":"getAll()"},{"location":"api/Vroom/Orm/Repository.html#tomodel","text":"public toModel ( mixed $var ) : ? object Parameters var mixed Returns ?object","title":"toModel()"},{"location":"api/Vroom/Orm/Decorator/Column.html","text":"Class Column \u00b6 Class \\Vroom\\Orm\\Decorator\\Column Methods \u00b6 __construct() \u00b6 public __construct ( string $name , INT $type , bool $nullable = false ) : Parameters name string type INT nullable bool getName() \u00b6 public getName ( ) : string Returns string getType() \u00b6 public getType ( ) : INT Returns INT isNullable() \u00b6 public isNullable ( ) : bool Returns bool","title":"Column"},{"location":"api/Vroom/Orm/Decorator/Column.html#class-column","text":"Class \\Vroom\\Orm\\Decorator\\Column","title":"Class Column"},{"location":"api/Vroom/Orm/Decorator/Column.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Decorator/Column.html#__construct","text":"public __construct ( string $name , INT $type , bool $nullable = false ) : Parameters name string type INT nullable bool","title":"__construct()"},{"location":"api/Vroom/Orm/Decorator/Column.html#getname","text":"public getName ( ) : string Returns string","title":"getName()"},{"location":"api/Vroom/Orm/Decorator/Column.html#gettype","text":"public getType ( ) : INT Returns INT","title":"getType()"},{"location":"api/Vroom/Orm/Decorator/Column.html#isnullable","text":"public isNullable ( ) : bool Returns bool","title":"isNullable()"},{"location":"api/Vroom/Orm/Decorator/Entity.html","text":"Class Entity \u00b6 Class \\Vroom\\Orm\\Decorator\\Entity Methods \u00b6 __construct() \u00b6 public __construct ( string $name ) : Parameters name string getName() \u00b6 public getName ( ) : string Returns string","title":"Entity"},{"location":"api/Vroom/Orm/Decorator/Entity.html#class-entity","text":"Class \\Vroom\\Orm\\Decorator\\Entity","title":"Class Entity"},{"location":"api/Vroom/Orm/Decorator/Entity.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Decorator/Entity.html#__construct","text":"public __construct ( string $name ) : Parameters name string","title":"__construct()"},{"location":"api/Vroom/Orm/Decorator/Entity.html#getname","text":"public getName ( ) : string Returns string","title":"getName()"},{"location":"api/Vroom/Orm/Model/Model.html","text":"Class Model \u00b6 Class \\Vroom\\Orm\\Model\\Model Methods \u00b6 _getvars() \u00b6 public _getvars ( ) : array Returns array isSave() \u00b6 public isSave ( ) : bool Returns bool newInstance() \u00b6 public newInstance ( ) : mixed Returns mixed query() \u00b6 public query ( ) : \\Vroom\\Orm\\Sql\\QueryBuilder Returns \\Vroom\\Orm\\Sql\\QueryBuilder save() \u00b6 public save ( ) : mixed Returns mixed serialize() \u00b6 public serialize ( ) : array Returns array varName() \u00b6 public static varName ( string $row ) : mixed Parameters row string Returns mixed","title":"Model"},{"location":"api/Vroom/Orm/Model/Model.html#class-model","text":"Class \\Vroom\\Orm\\Model\\Model","title":"Class Model"},{"location":"api/Vroom/Orm/Model/Model.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Model/Model.html#_getvars","text":"public _getvars ( ) : array Returns array","title":"_getvars()"},{"location":"api/Vroom/Orm/Model/Model.html#issave","text":"public isSave ( ) : bool Returns bool","title":"isSave()"},{"location":"api/Vroom/Orm/Model/Model.html#newinstance","text":"public newInstance ( ) : mixed Returns mixed","title":"newInstance()"},{"location":"api/Vroom/Orm/Model/Model.html#query","text":"public query ( ) : \\Vroom\\Orm\\Sql\\QueryBuilder Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"query()"},{"location":"api/Vroom/Orm/Model/Model.html#save","text":"public save ( ) : mixed Returns mixed","title":"save()"},{"location":"api/Vroom/Orm/Model/Model.html#serialize","text":"public serialize ( ) : array Returns array","title":"serialize()"},{"location":"api/Vroom/Orm/Model/Model.html#varname","text":"public static varName ( string $row ) : mixed Parameters row string Returns mixed","title":"varName()"},{"location":"api/Vroom/Orm/Model/Models.html","text":"Class Models \u00b6 Class \\Vroom\\Orm\\Model\\Models Constants \u00b6 CONTAINER_NAMESPACE \u00b6 public CONTAINER_NAMESPACE = \"_models\" Methods \u00b6 findBy() \u00b6 public static findBy ( mixed $model , array $array ) : ? object Parameters model mixed array array Returns ?object get() \u00b6 public static get ( mixed $model ) : mixed Parameters model mixed Returns mixed readModel() \u00b6 public static readModel ( mixed $model ) : mixed Parameters model mixed Returns mixed","title":"Models"},{"location":"api/Vroom/Orm/Model/Models.html#class-models","text":"Class \\Vroom\\Orm\\Model\\Models","title":"Class Models"},{"location":"api/Vroom/Orm/Model/Models.html#constants","text":"","title":"Constants"},{"location":"api/Vroom/Orm/Model/Models.html#container_namespace","text":"public CONTAINER_NAMESPACE = \"_models\"","title":"CONTAINER_NAMESPACE"},{"location":"api/Vroom/Orm/Model/Models.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Model/Models.html#findby","text":"public static findBy ( mixed $model , array $array ) : ? object Parameters model mixed array array Returns ?object","title":"findBy()"},{"location":"api/Vroom/Orm/Model/Models.html#get","text":"public static get ( mixed $model ) : mixed Parameters model mixed Returns mixed","title":"get()"},{"location":"api/Vroom/Orm/Model/Models.html#readmodel","text":"public static readModel ( mixed $model ) : mixed Parameters model mixed Returns mixed","title":"readModel()"},{"location":"api/Vroom/Orm/Model/Types.html","text":"Class Types \u00b6 Class \\Vroom\\Orm\\Model\\Types Constants \u00b6 DATETIME \u00b6 public DATETIME = 120 id \u00b6 public id = 1 INT \u00b6 public INT = 102 VARCHAR \u00b6 public VARCHAR = 101","title":"Types"},{"location":"api/Vroom/Orm/Model/Types.html#class-types","text":"Class \\Vroom\\Orm\\Model\\Types","title":"Class Types"},{"location":"api/Vroom/Orm/Model/Types.html#constants","text":"","title":"Constants"},{"location":"api/Vroom/Orm/Model/Types.html#datetime","text":"public DATETIME = 120","title":"DATETIME"},{"location":"api/Vroom/Orm/Model/Types.html#id","text":"public id = 1","title":"id"},{"location":"api/Vroom/Orm/Model/Types.html#int","text":"public INT = 102","title":"INT"},{"location":"api/Vroom/Orm/Model/Types.html#varchar","text":"public VARCHAR = 101","title":"VARCHAR"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html","text":"Class QueryBuilder \u00b6 Class \\Vroom\\Orm\\Sql\\QueryBuilder Methods \u00b6 __construct() \u00b6 public __construct ( string | null $model = null ) : Parameters model string|null __toString() \u00b6 public __toString ( ) : string Returns string delete() \u00b6 public delete ( ) : \\Vroom\\Orm\\Sql\\QueryBuilder Returns \\Vroom\\Orm\\Sql\\QueryBuilder from() \u00b6 public from ( ? string $table = \"\" , ? string $alias = null ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters table ?string alias ?string Returns \\Vroom\\Orm\\Sql\\QueryBuilder fromModel() \u00b6 public static fromModel ( \\Vroom\\Orm\\Model\\Model $model ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters model \\Vroom\\Orm\\Model\\Model Returns \\Vroom\\Orm\\Sql\\QueryBuilder insert() \u00b6 public insert ( array | \\Vroom\\Orm\\Model\\Model $insert ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters insert array| \\Vroom\\Orm\\Model\\Model Returns \\Vroom\\Orm\\Sql\\QueryBuilder limit() \u00b6 public limit ( INT $limit = 1 ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters limit INT Returns \\Vroom\\Orm\\Sql\\QueryBuilder newInstance() \u00b6 public static newInstance ( string $model = null ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters model string Returns \\Vroom\\Orm\\Sql\\QueryBuilder select() \u00b6 public select ( string $select ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters select string Returns \\Vroom\\Orm\\Sql\\QueryBuilder update() \u00b6 public update ( array | \\Vroom\\Orm\\Model\\Model $update ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters update array| \\Vroom\\Orm\\Model\\Model Returns \\Vroom\\Orm\\Sql\\QueryBuilder where() \u00b6 public where ( array $where ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters where array Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"QueryBuilder"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#class-querybuilder","text":"Class \\Vroom\\Orm\\Sql\\QueryBuilder","title":"Class QueryBuilder"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#__construct","text":"public __construct ( string | null $model = null ) : Parameters model string|null","title":"__construct()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#__tostring","text":"public __toString ( ) : string Returns string","title":"__toString()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#delete","text":"public delete ( ) : \\Vroom\\Orm\\Sql\\QueryBuilder Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"delete()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#from","text":"public from ( ? string $table = \"\" , ? string $alias = null ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters table ?string alias ?string Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"from()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#frommodel","text":"public static fromModel ( \\Vroom\\Orm\\Model\\Model $model ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters model \\Vroom\\Orm\\Model\\Model Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"fromModel()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#insert","text":"public insert ( array | \\Vroom\\Orm\\Model\\Model $insert ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters insert array| \\Vroom\\Orm\\Model\\Model Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"insert()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#limit","text":"public limit ( INT $limit = 1 ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters limit INT Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"limit()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#newinstance","text":"public static newInstance ( string $model = null ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters model string Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"newInstance()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#select","text":"public select ( string $select ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters select string Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"select()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#update","text":"public update ( array | \\Vroom\\Orm\\Model\\Model $update ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters update array| \\Vroom\\Orm\\Model\\Model Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"update()"},{"location":"api/Vroom/Orm/Sql/QueryBuilder.html#where","text":"public where ( array $where ) : \\Vroom\\Orm\\Sql\\QueryBuilder Parameters where array Returns \\Vroom\\Orm\\Sql\\QueryBuilder","title":"where()"},{"location":"api/Vroom/Orm/Sql/Sql.html","text":"Class Sql \u00b6 Class \\Vroom\\Orm\\Sql\\Sql Methods \u00b6 __construct() \u00b6 public __construct ( ) : connect() \u00b6 public connect ( ) : mixed Returns mixed getCon() \u00b6 public getCon ( ) : \\PDO Returns \\PDO query() \u00b6 public query ( string $query ) : bool | \\PDOStatement Parameters query string Returns bool|\\PDOStatement","title":"Sql"},{"location":"api/Vroom/Orm/Sql/Sql.html#class-sql","text":"Class \\Vroom\\Orm\\Sql\\Sql","title":"Class Sql"},{"location":"api/Vroom/Orm/Sql/Sql.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Orm/Sql/Sql.html#__construct","text":"public __construct ( ) :","title":"__construct()"},{"location":"api/Vroom/Orm/Sql/Sql.html#connect","text":"public connect ( ) : mixed Returns mixed","title":"connect()"},{"location":"api/Vroom/Orm/Sql/Sql.html#getcon","text":"public getCon ( ) : \\PDO Returns \\PDO","title":"getCon()"},{"location":"api/Vroom/Orm/Sql/Sql.html#query","text":"public query ( string $query ) : bool | \\PDOStatement Parameters query string Returns bool|\\PDOStatement","title":"query()"},{"location":"api/Vroom/Router/Request.html","text":"Class Request \u00b6 Class \\Vroom\\Router\\Request Methods \u00b6 __construct() \u00b6 public __construct ( \\Vroom\\Router\\Route $route ) : Parameters route \\Vroom\\Router\\Route get() \u00b6 public get ( mixed $path ) : mixed Parameters path mixed Returns mixed getBody() \u00b6 public getBody ( ) : mixed Returns mixed getRoute() \u00b6 public getRoute ( ) : \\Vroom\\Router\\Route Returns \\Vroom\\Router\\Route post() \u00b6 public post ( mixed $path ) : mixed Parameters path mixed Returns mixed query() \u00b6 public query ( string $key = \"\" ) : mixed Parameters key string Returns mixed redirect() \u00b6 public redirect ( mixed $url ) : mixed Parameters url mixed Returns mixed","title":"Request"},{"location":"api/Vroom/Router/Request.html#class-request","text":"Class \\Vroom\\Router\\Request","title":"Class Request"},{"location":"api/Vroom/Router/Request.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Router/Request.html#__construct","text":"public __construct ( \\Vroom\\Router\\Route $route ) : Parameters route \\Vroom\\Router\\Route","title":"__construct()"},{"location":"api/Vroom/Router/Request.html#get","text":"public get ( mixed $path ) : mixed Parameters path mixed Returns mixed","title":"get()"},{"location":"api/Vroom/Router/Request.html#getbody","text":"public getBody ( ) : mixed Returns mixed","title":"getBody()"},{"location":"api/Vroom/Router/Request.html#getroute","text":"public getRoute ( ) : \\Vroom\\Router\\Route Returns \\Vroom\\Router\\Route","title":"getRoute()"},{"location":"api/Vroom/Router/Request.html#post","text":"public post ( mixed $path ) : mixed Parameters path mixed Returns mixed","title":"post()"},{"location":"api/Vroom/Router/Request.html#query","text":"public query ( string $key = \"\" ) : mixed Parameters key string Returns mixed","title":"query()"},{"location":"api/Vroom/Router/Request.html#redirect","text":"public redirect ( mixed $url ) : mixed Parameters url mixed Returns mixed","title":"redirect()"},{"location":"api/Vroom/Router/Response.html","text":"Class Response \u00b6 Class \\Vroom\\Router\\Response Methods \u00b6 json() \u00b6 public json ( mixed $value = \"{}\" ) : mixed Parameters value mixed Returns mixed redirect() \u00b6 public redirect ( string $url ) : void Parameters url string can be a full url or route prefix","title":"Response"},{"location":"api/Vroom/Router/Response.html#class-response","text":"Class \\Vroom\\Router\\Response","title":"Class Response"},{"location":"api/Vroom/Router/Response.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Router/Response.html#json","text":"public json ( mixed $value = \"{}\" ) : mixed Parameters value mixed Returns mixed","title":"json()"},{"location":"api/Vroom/Router/Response.html#redirect","text":"public redirect ( string $url ) : void Parameters url string can be a full url or route prefix","title":"redirect()"},{"location":"api/Vroom/Router/Route.html","text":"Class Route \u00b6 Class \\Vroom\\Router\\Route Methods \u00b6 __construct() \u00b6 public __construct ( array $data , string $controller , string $method ) : Parameters data array controller string method string getController() \u00b6 public getController ( ) : string Returns string getControllerMethod() \u00b6 public getControllerMethod ( ) : mixed | string Returns mixed|string getMethod() \u00b6 public getMethod ( ) : string Returns string getName() \u00b6 public getName ( ) : string Returns string getParameters() \u00b6 public getParameters ( ) : array Returns array getPath() \u00b6 public getPath ( ) : string Returns string getVars() \u00b6 public getVars ( ) : array Returns array getVarsNames() \u00b6 public getVarsNames ( ) : array Returns array hasVars() \u00b6 public hasVars ( ) : bool Returns bool match() \u00b6 public match ( string $path , string $method ) : bool Parameters path string method string Returns bool trimPath() \u00b6 public static trimPath ( string $path ) : string Parameters path string Returns string","title":"Route"},{"location":"api/Vroom/Router/Route.html#class-route","text":"Class \\Vroom\\Router\\Route","title":"Class Route"},{"location":"api/Vroom/Router/Route.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Router/Route.html#__construct","text":"public __construct ( array $data , string $controller , string $method ) : Parameters data array controller string method string","title":"__construct()"},{"location":"api/Vroom/Router/Route.html#getcontroller","text":"public getController ( ) : string Returns string","title":"getController()"},{"location":"api/Vroom/Router/Route.html#getcontrollermethod","text":"public getControllerMethod ( ) : mixed | string Returns mixed|string","title":"getControllerMethod()"},{"location":"api/Vroom/Router/Route.html#getmethod","text":"public getMethod ( ) : string Returns string","title":"getMethod()"},{"location":"api/Vroom/Router/Route.html#getname","text":"public getName ( ) : string Returns string","title":"getName()"},{"location":"api/Vroom/Router/Route.html#getparameters","text":"public getParameters ( ) : array Returns array","title":"getParameters()"},{"location":"api/Vroom/Router/Route.html#getpath","text":"public getPath ( ) : string Returns string","title":"getPath()"},{"location":"api/Vroom/Router/Route.html#getvars","text":"public getVars ( ) : array Returns array","title":"getVars()"},{"location":"api/Vroom/Router/Route.html#getvarsnames","text":"public getVarsNames ( ) : array Returns array","title":"getVarsNames()"},{"location":"api/Vroom/Router/Route.html#hasvars","text":"public hasVars ( ) : bool Returns bool","title":"hasVars()"},{"location":"api/Vroom/Router/Route.html#match","text":"public match ( string $path , string $method ) : bool Parameters path string method string Returns bool","title":"match()"},{"location":"api/Vroom/Router/Route.html#trimpath","text":"public static trimPath ( string $path ) : string Parameters path string Returns string","title":"trimPath()"},{"location":"api/Vroom/Router/Router.html","text":"Class Router \u00b6 Class \\Vroom\\Router\\Router Router take always the last better Constants \u00b6 CONTAINER_NAMESPACE \u00b6 public CONTAINER_NAMESPACE = \"_router\" Methods \u00b6 addRoute() \u00b6 public addRoute ( array $data , mixed $controller ) : mixed Parameters data array controller mixed Returns mixed getFromPrefix() \u00b6 public static getFromPrefix ( string $prefix ) : mixed Parameters prefix string Returns mixed getRoutes() \u00b6 public getRoutes ( ) : \\Vroom\\Router\\Route [] Returns \\Vroom\\Router\\Route [] handle() \u00b6 public handle ( ) : mixed Returns mixed","title":"Router"},{"location":"api/Vroom/Router/Router.html#class-router","text":"Class \\Vroom\\Router\\Router Router take always the last better","title":"Class Router"},{"location":"api/Vroom/Router/Router.html#constants","text":"","title":"Constants"},{"location":"api/Vroom/Router/Router.html#container_namespace","text":"public CONTAINER_NAMESPACE = \"_router\"","title":"CONTAINER_NAMESPACE"},{"location":"api/Vroom/Router/Router.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Router/Router.html#addroute","text":"public addRoute ( array $data , mixed $controller ) : mixed Parameters data array controller mixed Returns mixed","title":"addRoute()"},{"location":"api/Vroom/Router/Router.html#getfromprefix","text":"public static getFromPrefix ( string $prefix ) : mixed Parameters prefix string Returns mixed","title":"getFromPrefix()"},{"location":"api/Vroom/Router/Router.html#getroutes","text":"public getRoutes ( ) : \\Vroom\\Router\\Route [] Returns \\Vroom\\Router\\Route []","title":"getRoutes()"},{"location":"api/Vroom/Router/Router.html#handle","text":"public handle ( ) : mixed Returns mixed","title":"handle()"},{"location":"api/Vroom/Router/Decorator/Route.html","text":"Class Route \u00b6 Class \\Vroom\\Router\\Decorator\\Route Methods \u00b6 __construct() \u00b6 public __construct ( string $url , string | null $name = \"\" , array $methods = [ \"GET\" ] ) : Parameters url string name string|null methods array getMethods() \u00b6 public getMethods ( ) : array Returns array getName() \u00b6 public getName ( ) : string Returns string getUrl() \u00b6 public getUrl ( ) : string Returns string setName() \u00b6 public setName ( string | null $name ) : void Parameters name string|null","title":"Route"},{"location":"api/Vroom/Router/Decorator/Route.html#class-route","text":"Class \\Vroom\\Router\\Decorator\\Route","title":"Class Route"},{"location":"api/Vroom/Router/Decorator/Route.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Router/Decorator/Route.html#__construct","text":"public __construct ( string $url , string | null $name = \"\" , array $methods = [ \"GET\" ] ) : Parameters url string name string|null methods array","title":"__construct()"},{"location":"api/Vroom/Router/Decorator/Route.html#getmethods","text":"public getMethods ( ) : array Returns array","title":"getMethods()"},{"location":"api/Vroom/Router/Decorator/Route.html#getname","text":"public getName ( ) : string Returns string","title":"getName()"},{"location":"api/Vroom/Router/Decorator/Route.html#geturl","text":"public getUrl ( ) : string Returns string","title":"getUrl()"},{"location":"api/Vroom/Router/Decorator/Route.html#setname","text":"public setName ( string | null $name ) : void Parameters name string|null","title":"setName()"},{"location":"api/Vroom/Security/Token.html","text":"Class Token \u00b6 Class \\Vroom\\Security\\Token Example usage: $freshToken = Token :: ( 15 , \"mysuperurl\" ); Properties \u00b6 token \u00b6 public string token url \u00b6 public string url Methods \u00b6 __construct() \u00b6 public __construct ( string $token , string $url ) : Parameters token string url string __serialize() \u00b6 public __serialize ( ) : array Returns array __unserialize() \u00b6 public __unserialize ( array $data ) : void Parameters data array getToken() \u00b6 public static getToken ( INT $length = 15 , string $url = \"\" ) : void | \\Vroom\\Security\\Token Generate a new instance of token with a random token. Example: $freshToken = Token :: ( url : \"myUrl\" ); $MyLongToken = Token :: ( 30 , \"my\" ); Parameters length INT url string Returns void| \\Vroom\\Security\\Token match() \u00b6 public match ( string $token , string $url ) : bool Verify if the token and url is the same. Example: // request on /user/login $token = \"blalba\" ; $FreshToken = Token :: ( url : \"myWrongUrl\" ); if ( token -> match ( $token , \"/user/login\" ) { // Will not pass because the url does not match with the token. } Parameters token string url string Returns bool","title":"Token"},{"location":"api/Vroom/Security/Token.html#class-token","text":"Class \\Vroom\\Security\\Token Example usage: $freshToken = Token :: ( 15 , \"mysuperurl\" );","title":"Class Token"},{"location":"api/Vroom/Security/Token.html#properties","text":"","title":"Properties"},{"location":"api/Vroom/Security/Token.html#token","text":"public string token","title":"token"},{"location":"api/Vroom/Security/Token.html#url","text":"public string url","title":"url"},{"location":"api/Vroom/Security/Token.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Security/Token.html#__construct","text":"public __construct ( string $token , string $url ) : Parameters token string url string","title":"__construct()"},{"location":"api/Vroom/Security/Token.html#__serialize","text":"public __serialize ( ) : array Returns array","title":"__serialize()"},{"location":"api/Vroom/Security/Token.html#__unserialize","text":"public __unserialize ( array $data ) : void Parameters data array","title":"__unserialize()"},{"location":"api/Vroom/Security/Token.html#gettoken","text":"public static getToken ( INT $length = 15 , string $url = \"\" ) : void | \\Vroom\\Security\\Token Generate a new instance of token with a random token. Example: $freshToken = Token :: ( url : \"myUrl\" ); $MyLongToken = Token :: ( 30 , \"my\" ); Parameters length INT url string Returns void| \\Vroom\\Security\\Token","title":"getToken()"},{"location":"api/Vroom/Security/Token.html#match","text":"public match ( string $token , string $url ) : bool Verify if the token and url is the same. Example: // request on /user/login $token = \"blalba\" ; $FreshToken = Token :: ( url : \"myWrongUrl\" ); if ( token -> match ( $token , \"/user/login\" ) { // Will not pass because the url does not match with the token. } Parameters token string url string Returns bool","title":"match()"},{"location":"api/Vroom/Utils/ArrayUtils.html","text":"Class ArrayUtils \u00b6 Class \\Vroom\\Utils\\ArrayUtils Methods \u00b6 __construct() \u00b6 public __construct ( array $array ) : Parameters array array from() \u00b6 public static from ( array $array ) : \\Vroom\\Utils\\ArrayUtils Return a new instance of ArrayUtils Parameters array array Returns \\Vroom\\Utils\\ArrayUtils get() \u00b6 public get ( string $path ) : mixed Return search in the array with a path ArrayUtils :: from ([ ... ]) -> get ( 'user.id' ); Parameters path string Returns mixed","title":"ArrayUtils"},{"location":"api/Vroom/Utils/ArrayUtils.html#class-arrayutils","text":"Class \\Vroom\\Utils\\ArrayUtils","title":"Class ArrayUtils"},{"location":"api/Vroom/Utils/ArrayUtils.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Utils/ArrayUtils.html#__construct","text":"public __construct ( array $array ) : Parameters array array","title":"__construct()"},{"location":"api/Vroom/Utils/ArrayUtils.html#from","text":"public static from ( array $array ) : \\Vroom\\Utils\\ArrayUtils Return a new instance of ArrayUtils Parameters array array Returns \\Vroom\\Utils\\ArrayUtils","title":"from()"},{"location":"api/Vroom/Utils/ArrayUtils.html#get","text":"public get ( string $path ) : mixed Return search in the array with a path ArrayUtils :: from ([ ... ]) -> get ( 'user.id' ); Parameters path string Returns mixed","title":"get()"},{"location":"api/Vroom/Utils/Container.html","text":"Class Container \u00b6 Class \\Vroom\\Utils\\Container Methods \u00b6 get() \u00b6 public static get ( string $name ) : mixed Parameters name string Returns mixed isEmpty() \u00b6 public static isEmpty ( string $name ) : bool Parameters name string Returns bool set() \u00b6 public static set ( string $name , mixed $value ) : void Parameters name string value mixed","title":"Container"},{"location":"api/Vroom/Utils/Container.html#class-container","text":"Class \\Vroom\\Utils\\Container","title":"Class Container"},{"location":"api/Vroom/Utils/Container.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Utils/Container.html#get","text":"public static get ( string $name ) : mixed Parameters name string Returns mixed","title":"get()"},{"location":"api/Vroom/Utils/Container.html#isempty","text":"public static isEmpty ( string $name ) : bool Parameters name string Returns bool","title":"isEmpty()"},{"location":"api/Vroom/Utils/Container.html#set","text":"public static set ( string $name , mixed $value ) : void Parameters name string value mixed","title":"set()"},{"location":"api/Vroom/Utils/Metrics.html","text":"Class Metrics \u00b6 Class \\Vroom\\Utils\\Metrics Methods \u00b6 getTime() \u00b6 public getTime ( ) : float Returns float start() \u00b6 public start ( ) : mixed Returns mixed stop() \u00b6 public stop ( ) : mixed Returns mixed","title":"Metrics"},{"location":"api/Vroom/Utils/Metrics.html#class-metrics","text":"Class \\Vroom\\Utils\\Metrics","title":"Class Metrics"},{"location":"api/Vroom/Utils/Metrics.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/Utils/Metrics.html#gettime","text":"public getTime ( ) : float Returns float","title":"getTime()"},{"location":"api/Vroom/Utils/Metrics.html#start","text":"public start ( ) : mixed Returns mixed","title":"start()"},{"location":"api/Vroom/Utils/Metrics.html#stop","text":"public stop ( ) : mixed Returns mixed","title":"stop()"},{"location":"api/Vroom/View/AppContext.html","text":"Class AppContext \u00b6 Class \\Vroom\\View\\AppContext Just a class used in the twig context Properties \u00b6 debug \u00b6 public bool debug = false load \u00b6 public load other \u00b6 public array other session \u00b6 public array session = [] Methods \u00b6 __construct() \u00b6 public __construct ( array $session , bool $debug , mixed $other = [] ) : Parameters session array debug bool other mixed","title":"AppContext"},{"location":"api/Vroom/View/AppContext.html#class-appcontext","text":"Class \\Vroom\\View\\AppContext Just a class used in the twig context","title":"Class AppContext"},{"location":"api/Vroom/View/AppContext.html#properties","text":"","title":"Properties"},{"location":"api/Vroom/View/AppContext.html#debug","text":"public bool debug = false","title":"debug"},{"location":"api/Vroom/View/AppContext.html#load","text":"public load","title":"load"},{"location":"api/Vroom/View/AppContext.html#other","text":"public array other","title":"other"},{"location":"api/Vroom/View/AppContext.html#session","text":"public array session = []","title":"session"},{"location":"api/Vroom/View/AppContext.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/View/AppContext.html#__construct","text":"public __construct ( array $session , bool $debug , mixed $other = [] ) : Parameters session array debug bool other mixed","title":"__construct()"},{"location":"api/Vroom/View/View.html","text":"Class View \u00b6 Class \\Vroom\\View\\View Methods \u00b6 getTwig() \u00b6 public static getTwig ( ) : \\Twig\\Environment Returns \\Twig\\Environment","title":"View"},{"location":"api/Vroom/View/View.html#class-view","text":"Class \\Vroom\\View\\View","title":"Class View"},{"location":"api/Vroom/View/View.html#methods","text":"","title":"Methods"},{"location":"api/Vroom/View/View.html#gettwig","text":"public static getTwig ( ) : \\Twig\\Environment Returns \\Twig\\Environment","title":"getTwig()"}]}